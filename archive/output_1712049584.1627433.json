{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "cls = <class 'drive_automation_test.TestfileActions'>\n\n    @classmethod\n    def setup_class(cls):\n        super(cls,TestfileActions).setup_class()#FIRST SUPER CLASS\n        #THEN SUBCLASS SETUP\n        prereqs=[]\n        # prereqs = [files.file_name, files.file_name_for_copy, files.file_move_name , files.file_to_be_deleted , *files.fileCollection , files.delete_forever_file_name]\n        file_list_to_upload = \" \".join(list(map(lambda a: f'\"{a}\"', prereqs)))\n        cls.higher_actions.click_on_new_button()\n        upload_button = cls.higher_actions.wait_to_click(locators.new_menu_button_locator(\"File upload\"))\n        upload_button.click()\n        sleep(2)\n        autoGUIutils.type_into_dialogue_box(file_list_to_upload)\n        sleep(3)\n>       cls.higher_actions.deal_duplicate_and_await_upload()\n\ndrive_automation_test.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlibrary_functions.py:393: in deal_duplicate_and_await_upload\n    self.web_driver_wait.until(EC.presence_of_element_located(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"938c4ab8383181414d3d9f981fc59844\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001940AEBC720>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6FAE7AD22+56930]\nE       \t(No symbol) [0x00007FF6FADEF622]\nE       \t(No symbol) [0x00007FF6FACA42E5]\nE       \t(No symbol) [0x00007FF6FACE98ED]\nE       \t(No symbol) [0x00007FF6FACE9A2C]\nE       \t(No symbol) [0x00007FF6FAD2A967]\nE       \t(No symbol) [0x00007FF6FAD0BCDF]\nE       \t(No symbol) [0x00007FF6FAD281E2]\nE       \t(No symbol) [0x00007FF6FAD0BA43]\nE       \t(No symbol) [0x00007FF6FACDD438]\nE       \t(No symbol) [0x00007FF6FACDE4D1]\nE       \tGetHandleVerifier [0x00007FF6FB1F6AAD+3709933]\nE       \tGetHandleVerifier [0x00007FF6FB24FFED+4075821]\nE       \tGetHandleVerifier [0x00007FF6FB24817F+4043455]\nE       \tGetHandleVerifier [0x00007FF6FAF19756+706710]\nE       \t(No symbol) [0x00007FF6FADFB8FF]\nE       \t(No symbol) [0x00007FF6FADF6AE4]\nE       \t(No symbol) [0x00007FF6FADF6C3C]\nE       \t(No symbol) [0x00007FF6FADE68F4]\nE       \tBaseThreadInitThunk [0x00007FF9C0937344+20]\nE       \tRtlUserThreadStart [0x00007FF9C0D226B1+33]\n\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n", "test_name": "test_upload_file", "rerun": "0"}}, "suite_name": "drive_automation_test.py"}}}, "date": "April 02, 2024", "start_time": 1712049187.518024, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}